#pragma kernel UpdateParticles
#pragma kernel UpdateSprings

struct Particle
{
    float3 position;
    float3 velocity;
    float3 force;
    float isFixed;
};

struct Spring
{
    int2 node;
    float length;
};

float dt;
float ks;
float kd;
float wass;
float3 gravity;

RWStructuredBuffer<Particle> particles;
RWStructuredBuffer<Spring> springs;

[numthreads(1024,1,1)]
void UpdateParticles(uint3 id : SV_DispatchThreadID)
{
    if (particles[id.x].isFixed) return;
    float3 acc = particles[id.x].force * wass + gravity;
    particles[id.x].velocity += acc * dt;
    particles[id.x].position += particles[id.x].velocity * dt;
    particles[id.x].force = float3(0, 0, 0);
}

[numthreads(1024,1,1)]
void UpdateSprings(uint3 id : SV_DispatchThreadID)
{
    int a = springs[id.x].node.x;
    int b = springs[id.x].node.y;
    float3 dir = particles[a].position - particles[b].position;
    float length = sqrt(dot(dir, dir));
    dir = normalize(dir);
    float3 force = ks * (length - springs[id.x].length) * dir;
    particles[a].force -= force;
    particles[b].force += force;
}